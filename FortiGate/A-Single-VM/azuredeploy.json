{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine"
      }
    },
    "fortiGateNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Name for FortiGate virtual appliances (A & B will be appended to the end of each respectively)"
      }
    },
    "fortiGateImageSKU": {
      "type": "string",
      "defaultValue": "fortinet_fg-vm",
      "allowedValues": [
        "fortinet_fg-vm",
        "fortinet_fg-vm_payg_20190624"
      ],
      "metadata": {
        "description": "Identifies whether to to use PAYG (on demand licensing) or BYOL license model (where license is purchased separately)"
      }
    },
    "fortiGateImageVersion": {
      "type": "string",
      "defaultValue": "latest",
      "allowedValues": [
        "6.2.0",
        "6.2.2",
        "6.2.4",
        "6.2.5",
        "6.4.0",
        "6.4.2",
        "6.4.3",
        "6.4.5",
        "7.0.0",
        "latest"
      ],
      "metadata": {
        "description": "Only 6.0.0 has the A/P HA feature currently"
      }
    },
    "fortiGateAditionalCustomData": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The ARM template provides a basic configuration. Additional configuration can be added here."
      }
    },
    "instanceType": {
      "type": "string",
      "defaultValue": "Standard_F2s",
      "allowedValues": [ "Standard_F1s", "Standard_F2s", "Standard_F4s", "Standard_F8s", "Standard_F16s", "Standard_F1", "Standard_F2", "Standard_F4", "Standard_F8", "Standard_F16", "Standard_F2s_v2", "Standard_F4s_v2", "Standard_F8s_v2", "Standard_F16s_v2", "Standard_F32s_v2", "Standard_DS1_v2", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2", "Standard_D2s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3", "Standard_D32s_v3"],
      "metadata": {
        "description": "Virtual Machine size selection - must be F4 or other instance that supports 4 NICs"
      }
    },
    "acceleratedNetworking": {
      "type": "string",
      "defaultValue": "false",
      "allowedValues": [ "false", "true" ],
      "metadata": {
        "description": "Accelerated Networking enables direct connection between the VM and network card. Only available on 2 CPU F/Fs and 4 CPU D/Dsv2, D/Dsv3, E/Esv3, Fsv2, Lsv2, Ms/Mms and Ms/Mmsv2"
      }
    },
    "publicIPNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing",
        "none"
      ],
      "metadata": {
        "description": "Choose between an existing or new public IP for the External Azure Load Balancer"
      }
    },
    "publicIPName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of Public IP address element"
      }
    },
    "publicIPResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource group to which the Public IP belongs"
      }
    },
    "publicIPAddressType": {
      "type": "string",
      "defaultValue": "Static",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Type of public IP address"
      }
    },
    "vnetNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Identify whether to use a new or existing vnet"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the Azure virtual network"
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource Group containing the existing virtual network (with new vnet the current resourcegroup is used)"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "172.16.136.0/22",
      "metadata": {
        "description": "Virtual Network Address prefix"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "ExternalSubnet",
      "metadata": {
        "description": "External Subnet"
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "172.16.136.0/26",
      "metadata": {
        "description": "External Subnet Prefix"
      }
    },
    "subnet1StartAddress": {
      "type": "string",
      "defaultValue": "172.16.136.4",
      "metadata": {
        "description": "Subnet 1 start address, 1 consecutive private IPs are required"
      }
    },
    "subnet2Name": {
      "type": "string",
      "defaultValue": "TransitSubnet",
      "metadata": {
        "description": "Internal Subnet"
      }
    },
    "subnet2Prefix": {
      "type": "string",
      "defaultValue": "172.16.136.64/26",
      "metadata": {
        "description": "Internal Subnet Prefix"
      }
    },
    "subnet2StartAddress": {
      "type": "string",
      "defaultValue": "172.16.136.68",
      "metadata": {
        "description": "Subnet 2 start address, 2 consecutive private IPs are required"
      }
    },
    "subnet3Name": {
      "type": "string",
      "defaultValue": "ProtectedASubnet",
      "metadata": {
        "description": "Protected A Subnet 5 Name"
      }
    },
    "subnet3Prefix": {
      "type": "string",
      "defaultValue": "172.16.137.0/24",
      "metadata": {
        "description": "Protected A Subnet 3 Prefix"
      }
    },
    "fortiManager": {
      "type": "string",
      "defaultValue": "no",
      "allowedValues": [
        "yes",
        "no"
      ],
      "metadata": {
        "description": "Connect to FortiManager"
      }
    },
    "fortiManagerIP": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "FortiManager IP or DNS name to connect to on port TCP/541"
      }
    },
    "fortiManagerSerial": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "FortiManager serial number to add the deployed FortiGate into the FortiManager"
      }
    },
    "fortiGateLicenseBYOL": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "FortiGate BYOL license content"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "fortinetTags": {
    "type": "object",
    "defaultValue": {
      "publisher": "Fortinet",
      "provider": "6EB3B02F-50E5-4A3E-8CB8-2E12925831VM"
      }
    }
  },
  "variables": {
    "imagePublisher": "fortinet",
    "imageOffer": "fortinet_fortigate-vm_v5",

    "vnetName": "[if(equals(parameters('vnetName'),''),concat(parameters('fortiGateNamePrefix'),'-VNET'),parameters('vnetName'))]",
    "subnet1Id": "[if(equals(parameters('vnetNewOrExisting'),'new'),resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet1Name')),resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet1Name')))]",
    "subnet2Id": "[if(equals(parameters('vnetNewOrExisting'),'new'),resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet2Name')),resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet2Name')))]",

    "fgaVmName": "[concat(parameters('fortiGateNamePrefix'),'-FGT-A')]",
    "fmgCustomData": "[if(equals(parameters('fortiManager'),'yes'),concat('\nconfig system central-management\nset type fortimanager\n set fmg ',parameters('fortiManagerIP'),'\nset serial-number ', parameters('fortiManagerSerial'), '\nend\n config system interface\n edit port1\n append allowaccess fgfm\n end\n config system interface\n edit port2\n append allowaccess fgfm\n end\n'),'')]",
    "customDataHeader": "Content-Type: multipart/mixed; boundary=\"12345\"\nMIME-Version: 1.0\n--12345\nContent-Type: text/plain; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"config\"\n\n",
    "customDataBody": "[concat('config system sdn-connector\nedit AzureSDN\nset type azure\nnext\nend\nconfig router static\nedit 1\nset gateway ', variables('sn1GatewayIP'), '\nset device port1\nnext\nedit 2\nset dst ', parameters('vnetAddressPrefix'), '\nset gateway ', variables('sn2GatewayIP'), '\nset device port2\nnext\nend\nconfig system interface\nedit port1\nset mode static\nset ip ',  variables('sn1IPfga'), '/', variables('sn1CIDRmask'), '\nset description external\nset allowaccess ping ssh https\nnext\nedit port2\nset mode static\nset ip ', variables('sn2IPfga'), '/', variables('sn2CIDRmask'), '\nset description internal\nset allowaccess ping ssh https\nnext\nend\n', variables('fmgCustomData'), parameters('fortiGateAditionalCustomData'), '\n')]",
    "customDataLicenseHeader": "--12345\nContent-Type: text/plain; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"fgtlicense\"\n\n",
    "customDataFooter": "--12345--\n",
    "customDataCombined": "[concat(variables('customDataHeader'),variables('customDataBody'),variables('customDataLicenseHeader'), parameters('fortiGateLicenseBYOL'), variables('customDataFooter'))]",
    "fgaCustomData": "[base64(if(equals(parameters('fortiGateLicenseBYOL'),''),variables('customDataBody'),variables('customDataCombined')))]",

    "routeTableProtectedName": "[concat(parameters('fortiGateNamePrefix'),'-RT-PROTECTED')]",
    "routeTableProtectedId": "[resourceId('Microsoft.Network/routeTables',variables('routeTableProtectedName'))]",

    "fgaNic1Name": "[concat(variables('fgaVmName'),'-Nic1')]",
    "fgaNic1Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('fgaNic1Name'))]",
    "fgaNic2Name": "[concat(variables('fgaVmName'),'-Nic2')]",
    "fgaNic2Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('fgaNic2Name'))]",

    "publicIPName": "[if(equals(parameters('publicIPName'),''),concat(parameters('fortiGateNamePrefix'),'-FGT-PIP'),parameters('publicIPName'))]",
    "publicIPId": "[if(equals(parameters('publicIPNewOrExisting'),'new'),resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPName')),resourceId(parameters('publicIPResourceGroup'),'Microsoft.Network/publicIPAddresses',variables('publicIPName')))]",
    "publicIPAddressId": { "id": "[variables('publicIPId')]" },

    "NSGName": "[concat(parameters('fortiGateNamePrefix'),'-',uniqueString(resourceGroup().id),'-NSG')]",
    "NSGId": "[resourceID('Microsoft.Network/networkSecurityGroups/',variables('NSGName'))]",

    "sn1IPArray": "[split(parameters('subnet1Prefix'),'.')]",
    "sn1IPArray2ndString": "[string(variables('sn1IPArray')[3])]",
    "sn1IPArray2nd": "[split(variables('sn1IPArray2ndString'),'/')]",
    "sn1CIDRmask": "[string(int(variables('sn1IPArray2nd')[1]))]",
    "sn1IPArray3": "[string(add(int(variables('sn1IPArray2nd')[0]),1))]",
    "sn1IPArray2": "[string(int(variables('sn1IPArray')[2]))]",
    "sn1IPArray1": "[string(int(variables('sn1IPArray')[1]))]",
    "sn1IPArray0": "[string(int(variables('sn1IPArray')[0]))]",
    "sn1GatewayIP": "[concat(variables('sn1IPArray0'),'.',variables('sn1IPArray1'),'.',variables('sn1IPArray2'),'.',variables('sn1IPArray3'))]",
    "sn1IPStartAddress": "[split(parameters('subnet1StartAddress'),'.')]",
    "sn1IPfga": "[concat(variables('sn1IPArray0'),'.',variables('sn1IPArray1'),'.',variables('sn1IPArray2'),'.',int(variables('sn1IPStartAddress')[3]))]",

    "sn2IPArray": "[split(parameters('subnet2Prefix'),'.')]",
    "sn2IPArray2ndString": "[string(variables('sn2IPArray')[3])]",
    "sn2IPArray2nd": "[split(variables('sn2IPArray2ndString'),'/')]",
    "sn2CIDRmask": "[string(int(variables('sn2IPArray2nd')[1]))]",
    "sn2IPArray3": "[string(add(int(variables('sn2IPArray2nd')[0]),1))]",
    "sn2IPArray2": "[string(int(variables('sn2IPArray')[2]))]",
    "sn2IPArray1": "[string(int(variables('sn2IPArray')[1]))]",
    "sn2IPArray0": "[string(int(variables('sn2IPArray')[0]))]",
    "sn2GatewayIP": "[concat(variables('sn2IPArray0'),'.',variables('sn2IPArray1'),'.',variables('sn2IPArray2'),'.',variables('sn2IPArray3'))]",
    "sn2IPStartAddress": "[split(parameters('subnet2StartAddress'),'.')]",
    "sn2IPfga": "[concat(variables('sn2IPArray0'),'.',variables('sn2IPArray1'),'.',variables('sn2IPArray2'),'.',int(variables('sn2IPStartAddress')[3]))]"
  },
  "resources": [
    {
      "apiVersion": "2019-10-01",
      "name": "[concat(parameters('fortiGateNamePrefix'), '-fortinetdeployment-', uniquestring(resourceGroup().id))]",
      "type": "Microsoft.Resources/deployments",
      "properties":{
       "mode": "Incremental",
       "template": {
         "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deplymentTemplate.json#",
         "contentVersion": "1.0.0.0",
         "resources": []
       }
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTableProtectedName')]",
      "apiVersion": "2020-04-01",
      "tags": {
       "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "location": "[parameters('location')]",
      "properties": {
        "routes": [
          {
            "name": "VirtualNetwork",
            "properties": {
              "addressPrefix": "[parameters('vnetAddressPrefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIPAddress": "[variables('sn2IPfga')]"
            }
          },
          {
            "name": "Subnet",
            "properties": {
              "addressPrefix": "[parameters('subnet3Prefix')]",
              "nextHopType": "VnetLocal"
            }
          },
          {
            "name": "Default",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIPAddress": "[variables('sn2IPfga')]"
            }
          }
        ]
      }
    },
    {
      "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-04-01",
      "name": "[variables('vnetName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('routeTableProtectedId')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnet1Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet1Prefix')]"
            }
          },
          {
            "name": "[parameters('subnet2Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet2Prefix')]"
            }
          },
          {
            "name": "[parameters('subnet3Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet3Prefix')]",
              "routeTable": {
                "id": "[variables('routeTableProtectedId')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-04-01",
      "tags": {
        "provider": "[toUpper(parameters('FortinetTags').provider)]"
      },
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('NSGName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowAllInbound",
            "properties": {
              "description": "Allow all in",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowAllOutbound",
            "properties": {
              "description": "Allow all out",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "condition": "[equals(parameters('publicIPNewOrExisting'), 'new')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-04-01",
      "tags": {
        "provider": "[toUpper(parameters('fortinetTags').provider)]"
      },
      "name": "[variables('publicIPName')]",
      "location": "[parameters('location')]",
      "sku":
      {
        "name": "Basic"
      },
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "2020-04-01",
      "tags": {
        "provider": "[toUpper(parameters('fortinetTags').provider)]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('fgaNic1Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('vnetName')]",
        "[variables('NSGId')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "[variables('sn1IPfga')]",
              "privateIPAllocationMethod": "Static",
              "publicIPAddress": "[if(not(equals(parameters('publicIPNewOrExisting'), 'none')), variables('publicIPAddressId') , json('null'))]",
              "subnet": {
                "id": "[variables('subnet1Id')]"
              }
            }
          }
        ],
        "enableIPForwarding": true,
        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
        "networkSecurityGroup": {
          "id": "[variables('NSGId')]"
        }
      }
    },
    {
      "apiVersion": "2020-04-01",
      "tags": {
       "provider": "[toUpper(parameters('fortinetTags').provider)]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('fgaNic2Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('vnetName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('sn2IPfga')]",
              "subnet": {
                "id": "[variables('subnet2Id')]"
              }
            }
          }
        ],
        "enableIPForwarding": true,
        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
        "networkSecurityGroup": {
          "id": "[variables('NSGId')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('fgaVmName')]",
      "apiVersion": "2019-07-01",
      "tags": {
       "provider": "[toUpper(parameters('fortinetTags').provider)]"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "[parameters('location')]",
      "plan": {
        "name": "[parameters('fortiGateImageSKU')]",
        "publisher": "[variables('imagePublisher')]",
        "product": "[variables('imageOffer')]"
      },
      "dependsOn": [
        "[variables('fgaNic1Id')]",
        "[variables('fgaNic2Id')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('instanceType')]"
        },
        "osProfile": {
          "computerName": "[variables('fgaVmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[variables('fgaCustomData')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('fortiGateImageSKU')]",
            "version": "[parameters('FortigateImageVersion')]"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": 30,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[variables('fgaNic1Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('fgaNic2Id')]"
            }
          ]
        }
      }
    }
  ]
  }
