#!/usr/bin/env python3

from jinja2 import Template
import ipaddress
import glob, os

#################################################################################
# Variables
#################################################################################
vpn_psk = "fortinet"
index_start = 1   # First IP in the IP network range to start counting
index_end = 16  # Count needs to be less than the IP addresses available in the IP network
vpn_a_ip_underlay = ipaddress.ip_network("172.16.136.0/25").network_address
vpn_b_ip_underlay = ipaddress.ip_network("172.16.137.0/25").network_address
vpn_a_subnet = "172.16.136.128/25"
vpn_b_subnet = "172.16.137.128/25"
vpn_config_name="vpn"
vpn_config_agg="${vpn_config_name}-agg"

#################################################################################
# Templates
#################################################################################
template_fgt = """# Generated by /share/tools/generate-config.py
{% for n in range(1,index_end+1) %}config vpn ipsec phase1-interface
    edit "{{ vpn_config_name }}{{ n }}"
        set interface "port1"
        set ike-version 2
        set keylife 28800
        set peertype any
        set net-device disable
        set proposal aes256gcm-prfsha256
        set local-gw {{ vpn_a_ip_underlay + 3 + n }}
        set remote-gw {{ vpn_b_ip_underlay + 3 + n }}
        set psksecret {{ vpn_psk }}
        set aggregate-member enable
    next
end
config vpn ipsec phase2-interface
    edit "{{ vpn_config_name }}{{n}}"
        set phase1name "{{ vpn_config_name }}{{n}}"
        set proposal aes128-sha1
        set keepalive enable
        set keylifeseconds 3600
        set auto-negotiate enable
    next
end
config system ipsec-aggregate
    edit "{{ vpn_config_agg }}"
        append member "{{ vpn_config_name }}{{n}}"
    next
end
{% endfor %}
config firewall policy
    edit 1
        set name "VPNAcceptAll"
        set srcintf "any"
        set dstintf "any"
        set srcaddr "all"
        set dstaddr "all"
        set action accept
        set schedule "always"
        set service "ALL"
        set logtraffic all
        set logtraffic-start enable
    next
end
config router static
    edit 1
        set gateway {{ vpn_a_ip_underlay + 1 }}
        set device "port1"
    next
    edit 2
        set dst {{ vpn_b_subnet }}
        set device {{ vpn_config_agg }}
    next
end
config system global
    set ipsec-round-robin enable
end
"""

#################################################################################
# Generate FortiGate A VPN config
#################################################################################
print("Generate FortiGate A VPN config ...")
#f = open("/share/tools/build/fgt-a.conf", "w")
f = open("fgt-a.conf", "w")

tm = Template(template_fgt)
msg = tm.render(index_end=index_end, vpn_config_name=vpn_config_name, \
                vpn_a_ip_underlay=vpn_a_ip_underlay, vpn_b_ip_underlay=vpn_b_ip_underlay, \
                vpn_psk=vpn_psk, vpn_b_subnet=vpn_b_subnet)
f.write(msg)

f.close()

#################################################################################
# Generate FortiGate B VPN config
#################################################################################
print("Generate FortiGate B VPN config ...")
#f = open("/share/tools/build/fgt-b.conf", "w")
f = open("fgt-b.conf", "w")

tm = Template(template_fgt)
msg = tm.render(index_end=index_end, vpn_config_name=vpn_config_name, \
                vpn_a_ip_underlay=vpn_b_ip_underlay, vpn_b_ip_underlay=vpn_a_ip_underlay, \
                vpn_psk=vpn_psk, vpn_b_subnet=vpn_a_subnet)
f.write(msg)

f.close()
