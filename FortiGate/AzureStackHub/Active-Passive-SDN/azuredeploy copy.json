{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "fortiGateNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Naming prefix for all deployed resources"
      }
    },
    "fortiGateImageSKU": {
      "type": "string",
      "defaultValue": "fortinet_fg-vm",
      "allowedValues": [
        "fortinet_fg-vm",
        "fortinet_fg-vm_payg_2023"
      ],
      "metadata": {
        "description": "Identifies whether to to use PAYG (on demand licensing) or BYOL license model (where license is purchased separately)"
      }
    },
    "fortiGateImageVersion": {
      "type": "string",
      "defaultValue": "latest",
      "allowedValues": [
        "7.2.4",
        "latest"
      ],
      "metadata": {
        "description": "Only 6.x has the A/P HA feature currently"
      }
    },
    "fortiGateAdditionalCustomData": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The ARM template provides a basic configuration. Additional configuration can be added here."
      }
    },
    "instanceType": {
      "type": "string",
      "defaultValue": "Standard_F4s",
      "allowedValues": [ "Standard_F4s", "Standard_F8s", "Standard_F16s", "Standard_F4", "Standard_F8", "Standard_F16", "Standard_F8s_v2", "Standard_F16s_v2", "Standard_F32s_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2", "Standard_D8s_v3", "Standard_D16s_v3", "Standard_D32s_v3"],
      "metadata": {
        "description": "Virtual Machine size selection - must be F4 or other instance that supports 4 NICs"
      }
    },
    "vnetNewOrExisting": {
      "type": "string",
      "defaultValue": "existing",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Identify whether to use a new or existing vnet"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnet-mzv-hub-vapenka",
      "metadata": {
        "description": "Name of the Azure virtual network."
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "defaultValue": "rg-network",
      "metadata": {
        "description": "Resource Group containing the virtual network - or new resource group from above (if new vnet)"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.224.254.0/24",
      "metadata": {
        "description": "Virtual Network Address prefix"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "FRONT",
      "metadata": {
        "description": "Subnet 1 Name"
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "10.224.254.0/29",
      "metadata": {
        "description": "Subnet 1 Prefix"
      }
    },
    "subnet1StartAddress": {
      "type": "string",
      "defaultValue": "10.224.254.5",
      "metadata": {
        "description": "Subnet 1 start address, 2 consecutive private IPs are required"
      }
    },
    "subnet2Name": {
      "type": "string",
      "defaultValue": "INT",
      "metadata": {
        "description": "Subnet 2 Name"
      }
    },
    "subnet2Prefix": {
      "type": "string",
      "defaultValue": "10.224.254.32/29",
      "metadata": {
        "description": "Subnet 2 Prefix"
      }
    },
    "subnet2StartAddress": {
      "type": "string",
      "defaultValue": "10.224.254.37",
      "metadata": {
        "description": "Subnet 2 start address, 2 consecutive private IPs are required"
      }
    },
    "subnet3Name": {
      "type": "string",
      "defaultValue": "HA",
      "metadata": {
        "description": "Subnet 3 Name"
      }
    },
    "subnet3Prefix": {
      "type": "string",
      "defaultValue": "10.224.254.8/29",
      "metadata": {
        "description": "Subnet 3 Prefix"
      }
    },
    "subnet3StartAddress": {
      "type": "string",
      "defaultValue": "10.224.254.13",
      "metadata": {
        "description": "Subnet 3 start address, 2 consecutive private IPs are required"
      }
    },
    "subnet4Name": {
      "type": "string",
      "defaultValue": "MGMT",
      "metadata": {
        "description": "Subnet 4 Name"
      }
    },
    "subnet4Prefix": {
      "type": "string",
      "defaultValue": "10.224.254.16/29",
      "metadata": {
        "description": "Subnet 4 Prefix"
      }
    },
    "subnet4StartAddress": {
      "type": "string",
      "defaultValue": "10.224.254.21",
      "metadata": {
        "description": "Subnet 4 start address, 2 consecutive private IPs are required"
      }
    },
    "fortiManager": {
      "type": "string",
      "defaultValue": "no",
      "allowedValues": [
        "yes",
        "no"
      ],
      "metadata": {
        "description": "Connect to FortiManager"
      }
    },
    "fortiManagerIP": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "FortiManager IP or DNS name to connect to on port TCP/541"
      }
    },
    "fortiManagerSerial": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "FortiManager serial number to add the deployed FortiGate into the FortiManager"
      }
    },
    "fortiGateLicenseBYOLA": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Primary FortiGate BYOL license content"
      }
    },
    "fortiGateLicenseFortiFlexA": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Primary FortiGate BYOL FortiFlex license token"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "fortinetTags": {
      "type": "object",
      "defaultValue": {
        "publisher": "Fortinet",
        "template": "custom Single VM Azure Stack FNTN-JVH",
        "provider": "6EB3B02F-50E5-4A3E-8CB8-2E12925"
      }
    }
  },
  "variables": {
    "imagePublisher": "fortinet",
    "imageOffer": ""fortinet-fortigate_vn-azurestack",

    "availabilitySetName": "availabilitySetName",
    "availabilitySetId": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]",

    "vnetName": "[if(equals(parameters('vnetName'),''),concat(parameters('fortiGateNamePrefix'),'-VNET'),parameters('vnetName'))]",
    "subnet1Id": "[if(equals(parameters('vnetNewOrExisting'),'new'),resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet1Name')),resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet1Name')))]",
    "subnet2Id": "[if(equals(parameters('vnetNewOrExisting'),'new'),resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet2Name')),resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet2Name')))]",
    "subnet3Id": "[if(equals(parameters('vnetNewOrExisting'),'new'),resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet3Name')),resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet3Name')))]",
    "subnet4Id": "[if(equals(parameters('vnetNewOrExisting'),'new'),resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet4Name')),resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet4Name')))]",

    "vmName": "[concat(parameters('fortiGateNamePrefix'),'-FGT-A')]",
    "fmgCustomData": "[if(equals(parameters('fortiManager'),'yes'),concat('\nconfig system central-management\nset type fortimanager\n set fmg ',parameters('fortiManagerIP'),'\nset serial-number ', parameters('fortiManagerSerial'), '\nend\n config system interface\n edit port1\n append allowaccess fgfm\n end\n config system interface\n edit port2\n append allowaccess fgfm\n end\n'),'')]",
    "fgaCustomDataFortiFlex": "[if(equals(parameters('fortiGateLicenseFortiFlexA'),''),'',concat('exec vm-license ',parameters('fortiGateLicenseFortiFlexA'), '\n'))]",
    "customDataHeader": "Content-Type: multipart/mixed; boundary=\"12345\"\nMIME-Version: 1.0\n\n--12345\nContent-Type: text/plain; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"config\"\n\n",
    "fgaCustomDataBody": "[concat('config system sdn-connector\nedit AzureSDN\nset type azure\nnext\nend\nconfig router static\n edit 1\n set gateway ', variables('sn1GatewayIP'), '\n set device port1\n next\n edit 2\n set dst ', parameters('vnetAddressPrefix'), '\n set gateway ', variables('sn2GatewayIP'), '\n set device port2\n next\n edit 3\nset dst 168.63.129.16 255.255.255.255\nset device port2\n set gateway ', variables ('sn2GatewayIP'), '\n next\nedit 4\nset dst 168.63.129.16 255.255.255.255\nset device port1\n set gateway ', variables ('sn1GatewayIP'), '\n next\n end\n config system interface\n edit port1\n set mode static\n set ip ', variables('sn1IPfga'), '/', variables('sn1CIDRmask'), '\n set description external\n next\n edit port2\n set mode static\n set ip ', variables('sn2IPfga'), '/', variables('sn2CIDRmask'), '\n set description internal\n next\n edit port3\n set mode static\n set ip ', variables('sn3IPfga'), '/', variables('sn3CIDRmask'), '\n set description hasyncport\n next\n edit port4\n set mode static\n set ip ', variables('sn4IPfga'), '/', variables('sn4CIDRmask'), '\n set description hammgmtport\n set allowaccess ping https ssh ftm\n next\n end\n', variables('fmgCustomData'), parameters('fortiGateAdditionalCustomData'), '\n', variables('fgaCustomDataFortiFlex'), '\n')]",
    "customDataLicenseHeader": "--12345\nContent-Type: text/plain; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"license\"\n\n",
    "customDataFooter": "\n--12345--\n",
    "fgaCustomDataCombined": "[concat(variables('customDataHeader'),variables('fgaCustomDataBody'),variables('customDataLicenseHeader'), parameters('fortiGateLicenseBYOLA'), variables('customDataFooter'))]",
    "fgaCustomData": "[base64(if(equals(parameters('fortiGateLicenseBYOLA'),''),variables('fgaCustomDataBody'),variables('fgaCustomDataCombined')))]",

    "fgaVmName": "[variables('vmName')]",

    "fgaNic1Name": "[concat(variables('vmName'),'-Nic1')]",
    "fgaNic1Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('fgaNic1Name'))]",
    "fgaNic2Name": "[concat(variables('vmName'),'-Nic2')]",
    "fgaNic2Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('fgaNic2Name'))]",
    "fgaNic3Name": "[concat(variables('vmName'),'-Nic3')]",
    "fgaNic3Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('fgaNic3Name'))]",
    "fgaNic4Name": "[concat(variables('vmName'),'-Nic4')]",
    "fgaNic4Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('fgaNic4Name'))]",

    "NSGName": "[concat(parameters('fortiGateNamePrefix'),'-',uniqueString(resourceGroup().id),'-NSG')]",
    "NSGId": "[resourceID('Microsoft.Network/networkSecurityGroups/',variables('NSGName'))]",

    "sn1IPArray": "[split(parameters('subnet1Prefix'),'.')]",
    "sn1IPArray2ndString": "[string(variables('sn1IPArray')[3])]",
    "sn1IPArray2nd": "[split(variables('sn1IPArray2ndString'),'/')]",
    "sn1CIDRmask": "[string(int(variables('sn1IPArray2nd')[1]))]",
    "sn1IPArray3": "[string(add(int(variables('sn1IPArray2nd')[0]),1))]",
    "sn1IPArray2": "[string(int(variables('sn1IPArray')[2]))]",
    "sn1IPArray1": "[string(int(variables('sn1IPArray')[1]))]",
    "sn1IPArray0": "[string(int(variables('sn1IPArray')[0]))]",
    "sn1GatewayIP": "[concat(variables('sn1IPArray0'),'.',variables('sn1IPArray1'),'.',variables('sn1IPArray2'),'.',variables('sn1IPArray3'))]",
    "sn1IPfga": "[parameters('subnet1StartAddress')]",

    "sn2IPArray": "[split(parameters('subnet2Prefix'),'.')]",
    "sn2IPArray2ndString": "[string(variables('sn2IPArray')[3])]",
    "sn2IPArray2nd": "[split(variables('sn2IPArray2ndString'),'/')]",
    "sn2CIDRmask": "[string(int(variables('sn2IPArray2nd')[1]))]",
    "sn2IPArray3": "[string(add(int(variables('sn2IPArray2nd')[0]),1))]",
    "sn2IPArray2": "[string(int(variables('sn2IPArray')[2]))]",
    "sn2IPArray1": "[string(int(variables('sn2IPArray')[1]))]",
    "sn2IPArray0": "[string(int(variables('sn2IPArray')[0]))]",
    "sn2GatewayIP": "[concat(variables('sn2IPArray0'),'.',variables('sn2IPArray1'),'.',variables('sn2IPArray2'),'.',variables('sn2IPArray3'))]",
    "sn2IPfga": "[parameters('subnet2StartAddress')]",

    "sn3IPArray": "[split(parameters('subnet3Prefix'),'.')]",
    "sn3IPArray2ndString": "[string(variables('sn3IPArray')[3])]",
    "sn3IPArray2nd": "[split(variables('sn3IPArray2ndString'),'/')]",
    "sn3CIDRmask": "[string(int(variables('sn3IPArray2nd')[1]))]",
    "sn3IPfga": "[parameters('subnet3StartAddress')]",

    "sn4IPArray": "[split(parameters('subnet4Prefix'),'.')]",
    "sn4IPArray2ndString": "[string(variables('sn4IPArray')[3])]",
    "sn4IPArray2nd": "[split(variables('sn4IPArray2ndString'),'/')]",
    "sn4CIDRmask": "[string(int(variables('sn4IPArray2nd')[1]))]",
    "sn4IPfga": "[parameters('subnet4StartAddress')]"
  },
  "resources": [
    {
      "apiVersion": "2019-10-01",
      "name": "[concat(parameters('fortiGateNamePrefix'), '-fortinetdeployment-', uniquestring(resourceGroup().id))]",
      "type": "Microsoft.Resources/deployments",
      "properties":{
       "mode": "Incremental",
       "template": {
         "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
         "contentVersion": "1.0.0.0",
         "resources": []
       }
      }
    },
    {
      "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2018-11-01",
      "name": "[variables('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnet1Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet1Prefix')]"
            }
          },
          {
            "name": "[parameters('subnet2Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet2Prefix')]"
            }
          },
          {
            "name": "[parameters('subnet3Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet3Prefix')]"
            }
          },
          {
            "name": "[parameters('subnet4Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet4Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-11-01",
      "tags": {
        "provider": "[toUpper(parameters('fortinetTags').provider)]"
      },
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('NSGName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowAllInbound",
            "properties": {
              "description": "Allow all in",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowAllOutbound",
            "properties": {
              "description": "Allow all out",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-11-01",
      "tags": {
        "provider": "[toUpper(parameters('fortinetTags').provider)]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('fgaNic1Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('vnetName')]",
        "[variables('NSGId')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "[variables('sn1IPfga')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('subnet1Id')]"
              }
            }
          }
        ],
        "enableIPForwarding": true,
        "networkSecurityGroup": {
          "id": "[variables('NSGId')]"
        }
      }
    },
    {
      "apiVersion": "2018-11-01",
      "tags": {
       "provider": "[toUpper(parameters('fortinetTags').provider)]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('fgaNic2Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('vnetName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('sn2IPfga')]",
              "subnet": {
                "id": "[variables('subnet2Id')]"
              }
            }
          }
        ],
        "enableIPForwarding": true,
        "networkSecurityGroup": {
          "id": "[variables('NSGId')]"
        }
      }
    },
    {
      "apiVersion": "2018-11-01",
      "tags": {
       "provider": "[toUpper(parameters('fortinetTags').provider)]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('fgaNic3Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('vnetName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('sn3IPfga')]",
              "subnet": {
                "id": "[variables('subnet3Id')]"
              }
            }
          }
        ],
        "enableIPForwarding": true,
        "networkSecurityGroup": {
          "id": "[variables('NSGId')]"
        }
      }
    },
    {
      "apiVersion": "2018-11-01",
      "tags": {
       "provider": "[toUpper(parameters('fortinetTags').provider)]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('fgaNic4Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('vnetName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('sn4IPfga')]",
              "subnet": {
                "id": "[variables('subnet4Id')]"
              }
            }
          }
        ],
        "enableIPForwarding": true,
        "networkSecurityGroup": {
          "id": "[variables('NSGId')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('fgaVmName')]",
      "apiVersion": "2020-06-01",
      "tags": {
       "provider": "[toUpper(parameters('fortinetTags').provider)]"
      },
      "location": "[parameters('location')]",
      "plan": {
        "name": "[parameters('fortiGateImageSKU')]",
        "publisher": "[variables('imagePublisher')]",
        "product": "[variables('imageOffer')]"
      },
      "dependsOn": [
        "[variables('fgaNic1Id')]",
        "[variables('fgaNic2Id')]",
        "[variables('fgaNic3Id')]",
        "[variables('fgaNic4Id')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('instanceType')]"
        },
        "availabilitySet": {
          "id": "[variables('availabilitySetId')]"
        },
        "osProfile": {
          "computerName": "[variables('fgaVmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[variables('fgaCustomData')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('fortiGateImageSKU')]",
            "version": "[parameters('FortiGateImageVersion')]"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": 30,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[variables('fgaNic1Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('fgaNic2Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('fgaNic3Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('fgaNic4Id')]"
            }
          ]
        }
      }
    }
  ]
}
