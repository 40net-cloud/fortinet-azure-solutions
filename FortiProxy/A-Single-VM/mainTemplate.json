{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the FortiProxy VM."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the FortiProxy VM."
      }
    },
    "fortiProxyNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Naming prefix for all deployed resources. The FortiProxy VM will have the suffix '-fpx'. For example if the prefix is 'acme-01' the FortiProxy will be named 'acme-01-vm-fpx'"
      }
    },
    "fortiProxyName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Custom naming for the deployed FortiProxy VM. This will override the automatic generation based on the prefix and suffix for the FortiProxy name."
      }
    },
    "fortiProxyImageSKU": {
      "type": "string",
      "defaultValue": "fpx-vm-byol",
      "allowedValues": [
        "fpx-vm-byol"
      ],
      "metadata": {
        "description": "Identifies the use of a BYOL license. (the license is purchased separately)"
      }
    },
    "fortiProxyImageVersion": {
      "type": "string",
      "defaultValue": "latest",
      "allowedValues": [
        "7.0.16",
        "7.0.17",
        "7.2.10",
        "7.2.9",
        "7.4.3",
        "7.4.4",
        "latest"
      ],
      "metadata": {
        "description": "Select the image version"
      }
    },
    "fortiProxyAdditionalCustomData": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The ARM template provides a basic configuration."
      }
    },
    "instanceType": {
      "type": "string",
      "defaultValue": "Standard_F2s",
      "allowedValues": [
        "Standard_F2s",
        "Standard_F4s",
        "Standard_F8s",
        "Standard_F16s",
        "Standard_F2",
        "Standard_F4",
        "Standard_F8",
        "Standard_F16",
        "Standard_F2s_v2",
        "Standard_F4s_v2",
        "Standard_F8s_v2",
        "Standard_F16s_v2",
        "Standard_F32s_v2",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_D2s_v3",
        "Standard_D4s_v3",
        "Standard_D8s_v3",
        "Standard_D16s_v3",
        "Standard_D32s_v3",
        "Standard_D2_v4",
        "Standard_D4_v4",
        "Standard_D8_v4",
        "Standard_D16_v4",
        "Standard_D32_v4",
        "Standard_D2s_v4",
        "Standard_D4s_v4",
        "Standard_D8s_v4",
        "Standard_D16s_v4",
        "Standard_D32s_v4",
        "Standard_D2a_v4",
        "Standard_D4a_v4",
        "Standard_D8a_v4",
        "Standard_D16a_v4",
        "Standard_D32a_v4",
        "Standard_D2as_v4",
        "Standard_D4as_v4",
        "Standard_D8as_v4",
        "Standard_D16as_v4",
        "Standard_D32as_v4",
        "Standard_D2_v5",
        "Standard_D4_v5",
        "Standard_D8_v5",
        "Standard_D16_v5",
        "Standard_D32_v5",
        "Standard_D2s_v5",
        "Standard_D4s_v5",
        "Standard_D8s_v5",
        "Standard_D16s_v5",
        "Standard_D32s_v5",
        "Standard_D2as_v5",
        "Standard_D4as_v5",
        "Standard_D8as_v5",
        "Standard_D16as_v5",
        "Standard_D32as_v5",
        "Standard_D2ads_v5",
        "Standard_D4ads_v5",
        "Standard_D8ads_v5",
        "Standard_D16ads_v5",
        "Standard_D32ads_v5"
      ],
      "metadata": {
        "description": "Virtual Machine size/instance type selection."
      }
    },
    "availabilityOptions": {
      "type": "string",
      "allowedValues": [
        "None",
        "Availability set",
        "Availability zone"
      ],
      "defaultValue": "None",
      "metadata": {
        "description": "Deploy FortiProxy VM in an Availability Set or Availability Zone. If Availability Zone deployment is selected but the location does not support Availability Zones an Availability Set will be deployed. If Availability Zone deployment is selected and Availability Zones are available in the location, the FortiProxy will be placed in Zone 1, unless a different zone is specified in the 'Availability Zone Number' parameter."
      }
    },
    "existingAvailabilitySetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of existing Availability Set in case you want to replace or add a FortiProxy to an existing cluster. Availability Sets and Availability Zones cannot be used at the same time."
      }
    },
    "availabilityZoneNumber": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specify an Availability Zone Number in case you want to replace or add a FortiProxy to an existing cluster. Availability Sets and Availability Zones cannot be used at the same time."
      }
    },
    "acceleratedNetworking": {
      "type": "string",
      "defaultValue": "false",
      "allowedValues": [
        "false",
        "true"
      ],
      "metadata": {
        "description": "Accelerated Networking enables direct connection between the VM and network card. Only available on 2 CPU F/Fs and 4 CPU D/Dsv2, D/Dsv3, E/Esv3, Fsv2, Lsv2, Ms/Mms and Ms/Mmsv2."
      }
    },
    "publicIP1NewOrExistingOrNone": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing",
        "none"
      ],
      "metadata": {
        "description": "Choose between an existing or new public IP address to be linked to the external interface of the FortiProxy VM. It is also possible to select none and no public IP will be created and attached to the FortiProxy."
      }
    },
    "publicIP1Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of Public IP address, if no name is provided the default name will be the Resource Group Name as the Prefix and '-pip-fpx' as the suffix."
      }
    },
    "publicIP1ResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Public IP Resource Group, this value is required if an existing Public IP is selected."
      }
    },
    "publicIP1AddressType": {
      "type": "string",
      "defaultValue": "Static",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Type of Public IP Address Persistence."
      }
    },
    "publicIP1SKU": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "metadata": {
        "description": "Type of Public IP Address SKU."
      }
    },
    "vnetNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Identify whether to use a new or existing Virtual Network."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the Virtual Network, required if utilizing an existing VNET. If no name is provided the default name will be the Resource Group Name as the Prefix and '-vnet' as the suffix."
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource Group containing the existing Virtual Network, leave blank if a new Virtual Network is being utilized."
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "172.16.136.0/22",
      "metadata": {
        "description": "Virtual Network Address prefix."
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "fpxsubnet",
      "metadata": {
        "description": "Subnet Name."
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "172.16.136.0/26",
      "metadata": {
        "description": "Subnet 1 Prefix."
      }
    },
    "subnet1StartAddress": {
      "type": "string",
      "defaultValue": "172.16.136.4",
      "metadata": {
        "description": "Subnet 1 start address, 1 consecutive private IPs are required."
      }
    },
    "serialConsole": {
      "type": "string",
      "defaultValue": "yes",
      "allowedValues": [
        "yes",
        "no"
      ],
      "metadata": {
        "description": "Enable Serial Console."
      }
    },
    "fortiManager": {
      "type": "string",
      "defaultValue": "no",
      "allowedValues": [
        "yes",
        "no"
      ],
      "metadata": {
        "description": "Connect to FortiManager."
      }
    },
    "fortiManagerIP": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "FortiManager IP or DNS name to connect to on port TCP/541."
      }
    },
    "fortiManagerSerial": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "FortiManager serial number to add the deployed FortiProxy to the FortiManager inventory."
      }
    },
    "fortiProxyLicenseBYOL": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "FortiProxy BYOL license content. A license can be added later by using the FortiProxy GUI."
      }
    },
    "customImageReference": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "By default, the deployment will use Azure Marketplace images. In specific cases, using BYOL custom FortiProxy images can be deployed. This requires a reference to the custom image."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "tagsByResource": {
      "type": "object",
      "defaultValue": {}
    },
    "fortinetTags": {
      "type": "object",
      "defaultValue": {
        "publisher": "Fortinet",
        "template": "FortiProxy-A-Single-VM",
        "provider": "6EB3B02F-50E5-4A3E-8CB8-2E1292583FPX"
      }
    }
  },
  "variables": {
    "imagePublisher": "fortinet",
    "imageOffer": "fortinet-fortiproxy",
    "availabilitySetName": "[if(equals(parameters('existingAvailabilitySetName'),''), concat(parameters('fortiProxyNamePrefix'), '-availabilityset'), parameters('existingAvailabilitySetName'))]",
    "availabilitySetId": {
      "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
    },
    "useAS": "[equals(parameters('availabilityOptions'), 'Availability set')]",
    "useAZ": "[and(not(empty(pickZones('Microsoft.Compute', 'virtualMachines', parameters('location')))), equals(parameters('availabilityOptions'), 'Availability zone'))]",
    "pipZones": "[if(variables('useAZ'), pickZones('Microsoft.Network', 'publicIPAddresses', parameters('location'), 3), json('null'))]",
    "zone1": "[if(equals(parameters('availabilityZoneNumber'),''),pickZones('Microsoft.Compute', 'virtualMachines', parameters('location')),array(parameters('availabilityZoneNumber')))]",
    "fpxVmName": "[if(equals(parameters('fortiProxyName'),''),concat(parameters('fortiProxyNamePrefix'),'-fpx-vm'),parameters('fortiProxyName'))]",
    "vnetName": "[if(equals(parameters('vnetName'),''),concat(parameters('fortiProxyNamePrefix'), '-vnet'),parameters('vnetName'))]",
    "subnet1Id": "[if(equals(parameters('vnetNewOrExisting'),'new'),resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet1Name')),resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', variables('vnetName'),parameters('subnet1Name')))]",
    "sn1CidrObject": "[parseCidr(parameters('subnet1Prefix'))]",
    "sn1IPfpx": "[concat(split(parameters('subnet1Prefix'),'.')[0],'.',split(parameters('subnet1Prefix'),'.')[1],'.',split(parameters('subnet1Prefix'),'.')[2],'.',int(split(parameters('subnet1StartAddress'),'.')[3]))]",
    "fpxNic1Name": "[concat(parameters('fortiProxyNamePrefix'), '-fpx-nic-1')]",
    "fpxNic1Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('fpxNic1Name'))]",
    "publicIP1Name": "[if(equals(parameters('publicIP1Name'),''),concat(parameters('fortiProxyNamePrefix'),'-fpx-pip'),parameters('publicIP1Name'))]",
    "publicIP1Id": "[if(equals(parameters('publicIP1NewOrExistingOrNone'),'new'),resourceId('Microsoft.Network/publicIPAddresses',variables('publicIP1Name')),resourceId(parameters('publicIP1ResourceGroup'),'Microsoft.Network/publicIPAddresses',variables('publicIP1Name')))]",
    "publicIP1AddressId": {
      "id": "[variables('publicIP1Id')]"
    },
    "fmgCustomData": "[if(equals(parameters('fortiManager'),'yes'),concat('\nconfig system central-management\nset type fortimanager\n set fmg ',parameters('fortiManagerIP'),'\nset serial-number ', parameters('fortiManagerSerial'), '\nend\n config system interface\n edit port1\n append allowaccess fgfm\n end\n config system interface\n edit port2\n append allowaccess fgfm\n end\n'),'')]",
    "customDataHeader": "Content-Type: multipart/mixed; boundary=\"12345\"\nMIME-Version: 1.0\n\n--12345\nContent-Type: text/plain; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"config\"\n\n",
    "customDataBody": "[concat('config system global\nset hostname ', variables('fpxVmName'), '\nend\nconfig system sdn-connector\nedit AzureSDN\nset type azure\nnext\nend\nconfig router static\nedit 1\nset gateway ', variables('sn1CidrObject').firstUsable, '\nset device port1\nnext\nend\nconfig system interface\nedit port1\nset mode static\nset ip ', variables('sn1IPfpx'), '/', variables('sn1CidrObject').cidr, '\nset description external\nset allowaccess ping ssh https\nnext\nend\n', variables('fmgCustomData'), parameters('fortiProxyAdditionalCustomData'), '\n')]",
    "customDataLicenseHeader": "--12345\nContent-Type: text/plain; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"license\"\n\n",
    "customDataFooter": "\n--12345--\n",
    "customDataCombined": "[concat(variables('customDataHeader'),variables('customDataBody'),variables('customDataLicenseHeader'), parameters('fortiProxyLicenseBYOL'), variables('customDataFooter'))]",
    "fpxCustomData": "[base64(if(equals(parameters('fortiProxyLicenseBYOL'),''),variables('customDataBody'),variables('customDataCombined')))]",
    "serialConsoleEnabled": "[if(equals(parameters('serialConsole'),'yes'),'true','false')]",
    "imageReferenceMarketplace": {
      "publisher": "[variables('imagePublisher')]",
      "offer": "[variables('imageOffer')]",
      "sku": "[parameters('fortiProxyImageSKU')]",
      "version": "[parameters('fortiProxyImageVersion')]"
    },
    "imageReferenceCustomImage": {
      "id": "[parameters('customImageReference')]"
    },
    "virtualMachinePlan": {
      "name": "[parameters('fortiProxyImageSKU')]",
      "publisher": "[variables('imagePublisher')]",
      "product": "[variables('imageOffer')]"
    },
    "nsgName": "[concat(parameters('fortiProxyNamePrefix'),'-nsg')]",
    "nsgId": "[resourceID('Microsoft.Network/networkSecurityGroups/',variables('nsgName'))]",
    "nsgRules": [
      [
        "nsgrule-ssh-in",
        "Allow SSH In",
        "Tcp",
        "*",
        "22",
        "*",
        "*",
        "Allow",
        100,
        "Inbound"
      ],
      [
        "nsgrule-http-in",
        "Allow HTTP In",
        "Tcp",
        "*",
        "80",
        "*",
        "*",
        "Allow",
        "110",
        "Inbound"
      ],
      [
        "nsgrule-https-in",
        "Allow HTTPS In",
        "Tcp",
        "*",
        "443",
        "*",
        "*",
        "Allow",
        "120",
        "Inbound"
      ],
      [
        "nsgrule-fpx-in",
        "Allow Proxy (8080) In",
        "Tcp",
        "*",
        "8080",
        "*",
        "*",
        "Allow",
        "130",
        "Inbound"
      ],
      [
        "nsgrule-fmg-in",
        "Allow FortiManager (541) In",
        "Tcp",
        "*",
        "541",
        "*",
        "*",
        "Allow",
        "140",
        "Inbound"
      ],
      [
        "nsgrule-all-out",
        "Allow All Out",
        "*",
        "*",
        "*",
        "*",
        "*",
        "Allow",
        "105",
        "Outbound"
      ]
    ]
  },
  "resources": [
    {
      "apiVersion": "2022-09-01",
      "name": "[concat(parameters('fortiProxyNamePrefix'), '-fortinetdeployment-', uniquestring(resourceGroup().id))]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "condition": "[and(variables('useAS'),equals(parameters('existingAvailabilitySetName'),''))]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2023-03-01",
      "name": "[variables('availabilitySetName')]",
      "location": "[parameters('location')]",
      "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Compute/availabilitySets'), union(parameters('fortinetTags'),parameters('tagsByResource')['Microsoft.Compute/availabilitySets']), parameters('fortinetTags')) ]",
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]",
      "name": "[variables('vnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-04-01",
      "location": "[parameters('location')]",
      "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworks'), union(parameters('fortinetTags'),parameters('tagsByResource')['Microsoft.Network/virtualNetworks']), parameters('fortinetTags')) ]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnet1Name')]",
            "properties": {
              "addressPrefix": "[parameters('subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "apiVersion": "2023-04-01",
      "location": "[parameters('location')]",
      "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/networkSecurityGroups'), union(parameters('fortinetTags'),parameters('tagsByResource')['Microsoft.Network/networkSecurityGroups']), parameters('fortinetTags')) ]",
      "properties": {
        "copy": [
          {
            "name": "securityRules",
            "count": "[length(variables('nsgrules'))]",
            "input": {
              "name": "[variables('nsgrules')[copyIndex('securityRules')][0]]",
              "properties": {
                "description": "[variables('nsgrules')[copyIndex('securityRules')][1]]",
                "protocol": "[variables('nsgrules')[copyIndex('securityRules')][2]]",
                "sourcePortRange": "[variables('nsgrules')[copyIndex('securityRules')][3]]",
                "destinationPortRange": "[variables('nsgrules')[copyIndex('securityRules')][4]]",
                "sourceAddressPrefix": "[variables('nsgrules')[copyIndex('securityRules')][5]]",
                "destinationAddressPrefix": "[variables('nsgrules')[copyIndex('securityRules')][6]]",
                "access": "[variables('nsgrules')[copyIndex('securityRules')][7]]",
                "priority": "[variables('nsgrules')[copyIndex('securityRules')][8]]",
                "direction": "[variables('nsgrules')[copyIndex('securityRules')][9]]"
              }
            }
          }
        ]
      }
    },
    {
      "condition": "[equals(parameters('publicIP1NewOrExistingOrNone'), 'new')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIP1Name')]",
      "apiVersion": "2023-04-01",
      "location": "[parameters('location')]",
      "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/publicIPAddresses'), union(parameters('fortinetTags'),parameters('tagsByResource')['Microsoft.Network/publicIPAddresses']), parameters('fortinetTags')) ]",
      "sku": {
        "name": "[parameters('publicIP1SKU')]"
      },
      "zones": "[variables('pipZones')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIP1AddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(toLower(variables('fpxVmName')), '-', uniquestring(resourceGroup().id))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('fpxNic1Name')]",
      "apiVersion": "2023-04-01",
      "location": "[parameters('location')]",
      "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Network/networkInterfaces'), union(parameters('fortinetTags'),parameters('tagsByResource')['Microsoft.Network/networkInterfaces']), parameters('fortinetTags')) ]",
      "dependsOn": [
        "[variables('vnetName')]",
        "[variables('NSGId')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "[variables('sn1IPfpx')]",
              "privateIPAllocationMethod": "Static",
              "publicIPAddress": "[if(not(equals(parameters('publicIP1NewOrExistingOrNone'), 'none')), variables('publicIP1AddressId') , json('null'))]",
              "subnet": {
                "id": "[variables('subnet1Id')]"
              }
            }
          }
        ],
        "enableIPForwarding": true,
        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
        "networkSecurityGroup": {
          "id": "[variables('NSGId')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('fpxVmName')]",
      "apiVersion": "2023-03-01",
      "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Compute/virtualMachines'), union(parameters('fortinetTags'),parameters('tagsByResource')['Microsoft.Compute/virtualMachines']), parameters('fortinetTags')) ]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "zones": "[if(variables('useAZ'), variables('zone1'), json('null'))]",
      "plan": "[if(and(equals(parameters('fortiProxyImageSKU'),'fortinet-fortiproxy'),not(equals(parameters('customImageReference'),''))), json('null'), variables('virtualMachinePlan'))]",
      "dependsOn": [
        "[variables('fpxNic1Id')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('instanceType')]"
        },
        "availabilitySet": "[if(variables('useAS'), variables('availabilitySetId'), json('null'))]",
        "osProfile": {
          "computerName": "[variables('fpxVmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[variables('fpxCustomData')]"
        },
        "storageProfile": {
          "imageReference": "[if(and(equals(parameters('fortiProxyImageSKU'),'fortinet-fortiproxy'),not(equals(parameters('customImageReference'),''))), variables('imageReferenceCustomImage'), variables('imageReferenceMarketplace'))]",
          "osDisk": {
            "name": "[toLower(concat(variables('fpxVmName'), '-osdisk'))]",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[toLower(concat(variables('fpxVmName'), '-disk'))]",
              "diskSizeGB": 30,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[variables('fpxNic1Id')]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "[variables('serialConsoleEnabled')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "fortiProxyPublicIP": {
      "type": "string",
      "value": "[if(and(equals(parameters('publicIP1NewOrExistingOrNone'), 'new'),equals(parameters('publicIP1SKU'),'Standard')), reference(variables('publicIP1Id')).ipAddress, '')]"
    },
    "fortiProxyFQDN": {
      "type": "string",
      "value": "[if(equals(parameters('publicIP1NewOrExistingOrNone'), 'new'), reference(variables('publicIP1Id')).dnsSettings.fqdn, '' )]"
    },
    "fortiProxyConfig": {
      "type": "string",
      "value": "[if(equals(parameters('fortiProxyLicenseBYOL'),''),variables('customDataBody'),variables('customDataCombined'))]"
    }
  }
}
