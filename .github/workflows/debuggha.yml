name: '[FGT] Debug GitHub Actions'

env:
  ARMPath: FortiGate/A-Single-VM/

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
    - 'FortiGate/A-Single-VM/*.json'
    - 'FortiGate/A-Single-VM/**.tests.ps1'

jobs:
  ARM_A-Single-VM:
#    name: 'ARM Template A-Single-VM'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
    - name: "Checkout"
      uses: actions/checkout@v3.2.0

    - name: ARM TTK - Test ARM Templates
      shell: pwsh
      run: |
        Install-Module -Name Pester -RequiredVersion 4.10.1 -Force
        Import-Module -Name Pester -RequiredVersion 4.10.1 -Force
        Invoke-WebRequest -Uri "https://aka.ms/arm-ttk-latest" -OutFile arm-template-toolkit.zip
        Expand-Archive -LiteralPath arm-template-toolkit.zip -DestinationPath arm-ttk
        Import-Module ./arm-ttk/arm-ttk/arm-ttk.psd1
        echo "Test-AzTemplate -TemplatePath ${{ env.ARMPath }} -Pester" | Out-File -FilePath ./armttk.ps1
        Invoke-Pester -Script ./armttk.ps1 -EnableExit -OutputFormat NUnitXml -OutputFile ./armttk.xml

    - name: ARM TTK - Publish Test Results
      uses: actions/upload-artifact@v3
      with:
        name: ARMTTKResults
        path: ./armttk.xml
      if: ${{ always() }}

    - name: Microsoft Teams Notification
      uses: skitionek/notify-microsoft-teams@master
      if: always()
      with:
        webhook_url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
        needs: ${{ toJson(needs) }}
        job: ${{ toJson(job) }}
        steps: ${{ toJson(steps) }}

#    - name: Azure Login via Az module
#      uses: azure/login@v1.4.6
#      with:
#        creds: ${{secrets.AZURE_CREDENTIALS}}
#        enable-AzPSSession: true

#    - name: Run Pester tests (pwsh)
#      uses: azure/powershell@v1.2.0
#      with:
#        inlineScript: |
#          mkdir -p /home/runner/.ssh/
#          chmod 700 /home/runner/.ssh/
#          ssh-keygen -t rsa -b 4096 -f /home/runner/.ssh/id_rsa -C "fortigate_test@40net.cloud" -N '""'
#          chmod 400 /home/runner/.ssh/id_rsa*
#          Set-PSRepository psgallery -InstallationPolicy trusted
#          Install-Module -Name Pester -RequiredVersion 5.0.4 -confirm:$false -Force
#          $container = New-PesterContainer -Path ".github/workflows/test/" -Data @{sshkey = "/home/runner/.ssh/id_rsa"; sshkeypub = "/home/runner/.ssh/id_rsa.pub"}
#          $config = New-PesterConfiguration
#          $config.Run.Container = $container
#          $config.Run.Exit = $true
#          $config.Run.PassThru = $true
#          $config.TestResult.OutputFormat = "NUnitXML"
#          $config.TestResult.OutputPath = "Test-Pester.XML"
#          $config.Output.Verbosity = 'Detailed'
#          Invoke-Pester -Configuration $config
#        azPSVersion: "latest"

#    - name: Microsoft Teams Notifications DC
#      uses: dragos-cojocari/ms-teams-notification@v1.0.2
#      with:
#        github-token: ${{ github.token }} # this will use the runner's token.
#        ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
#        notification-summary: [FGT] A Single VM
#        notification-color: 17a2b8
#        timezone: Europe/Paris
# https://github.com/FreEZer00/teams-webhook-action
#    - name: Post result to Teams
#      uses: freezer00/teams-webhook-action@v1.0.0
#      if: always()
#      with:
#        webhook_url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
#        needs: ${{ toJson(needs) }}
#        job: ${{ toJson(job) }}
