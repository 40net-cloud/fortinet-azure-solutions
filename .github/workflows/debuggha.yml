name: '[FGT] Debug GitHub Actions'

env:
  ARMPath: FortiGate/A-Single-VM/

on:
  workflow_dispatch:
#  push:
#    branches:
#      - main
#    paths:
#    - 'FortiGate/A-Single-VM/*.json'
#    - 'FortiGate/A-Single-VM/**.tests.ps1'

jobs:
  ARM_debug:
    name: 'ARM Template A-Single-VM'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
    - name: "Checkout"
      uses: actions/checkout@v4

    - name: FortiDevSec application config file
      run: |
        echo "${{ secrets.FDEVSEC_FGT_AZURE_TERRAFORM}}" | base64 --decode > $GITHUB_WORKSPACE/fdevsec.yaml
        echo .
        cat ./fdevsec.yaml
        echo .
        ls -la
        echo .
        pwd
        echo .
        ls -la $GITHUB_WORKSPACE
        echo .


#    - name: Azure Login via Az module
#      uses: azure/login@v1
#      with:
#        creds: ${{secrets.AZURE_CREDENTIALS}}
#        enable-AzPSSession: true
#
#    - name: Run Pester tests (pwsh)
#      uses: azure/powershell@v1
#      with:
#        inlineScript: |
#          mkdir -p /home/runner/.ssh/
#          chmod 700 /home/runner/.ssh/
#          echo "${{secrets.TEST_SSH_KEY}}" > /home/runner/.ssh/id_test
#          chmod 400 /home/runner/.ssh/id_test*
#          ls -la /home/runner/.ssh/id_test 
#          ls -la .github/workflows/test
#          ls -la ~/.github/workflows/test
#          Set-PSRepository psgallery -InstallationPolicy trusted
#          Install-Module -Name Pester -RequiredVersion 5.0.4 -confirm:$false -Force
#          $container = New-PesterContainer -Path ".github/workflows/" -Data @{sshkey = "/home/runner/.ssh/id_test"}
#          $config = New-PesterConfiguration
#          $config.Run.Container = $container
#          $config.Run.Exit = $true
#          $config.Run.PassThru = $true
#          $config.TestResult.OutputFormat = "NUnitXML"
#          $config.TestResult.OutputPath = "Test-Pester.XML"
#          $config.Output.Verbosity = 'Detailed'
#          Invoke-Pester -Configuration $config
#        azPSVersion: "latest"
